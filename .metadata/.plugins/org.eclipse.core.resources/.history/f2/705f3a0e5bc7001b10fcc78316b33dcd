package com.cg.pack.service;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cg.pack.entities.Pack;
import com.cg.pack.exception.PackNotFoundException;
import com.cg.pack.repository.IPackRepository;

@Service
public class PackserviceImpl implements IPackservice {
	
	Logger logger = LoggerFactory.getLogger(PackserviceImpl.class);
	
	@Autowired
	public IPackRepository repository;
	
	
	
	@Override
	public Pack addPack(Pack pack)
	{
		logger.info("Inside add pack ");
		return repository.save(pack);
		
	}



	@Override
	public Pack updatePack(Pack pack) {
		
		logger.info("Inside Update pack ");
		return null;
	}



	@Override
	public Pack findPackById(Long PackId) {
		
		logger.info("Inside FindPackById ");
		return null;
	}



	@Override
	public List<Pack> findPacksGreaterThanAmount(double amount) {
		
		logger.info("Inside FindPacksGreaterThanTheAmount ");
		return null;
	}



	@Override
	public List<Pack> findPacksInAscendingOrder(double amount) {
		
		logger.info("Inside add pack ");
		return null;
	}



	@Override
	public List<Pack> findPacksInAscendingOrderByCost(double amount) {
		
		logger.info("Inside add pack ");
		return null;
	}



	@Override
	public List<Pack> findPacksInAscendingOrderByDaysValidity(double amount) {
		
		logger.info("Inside add pack ");
		
		Optional<Pack> pack = repository.findByDaysValidity(null);
		return null;
	}



	@Override
	public List<Pack> popularPacks() {
		
		logger.info("Inside add pack ");
		return null;
	}



	@Override
	public void deleteByPackId(Long packId) throws PackNotFoundException{
		
		Optional<Pack> pack = repository.findById(packId);
		
		if(pack.isPresent())
		{
			repository.deleteById(packId);
		}
		else
		{
			throw new PackNotFoundException();
		}
	}
	
	
	

	
	
}
